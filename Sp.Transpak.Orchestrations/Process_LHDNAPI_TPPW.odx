#if __DESIGNER_DATA
#error Do not define __DESIGNER_DATA.
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<om:MetaModel MajorVersion="1" MinorVersion="3" Core="2b131234-7959-458d-834f-2dc0769ce683" ScheduleModel="66366196-361d-448d-976f-cab5e87496d2" xmlns:om="http://schemas.microsoft.com/BizTalk/2003/DesignerData">
    <om:Element Type="Module" OID="1cdf7fcf-e332-4327-9f4a-5c047acb2dfb" LowerBound="1.1" HigherBound="217.1">
        <om:Property Name="ReportToAnalyst" Value="True" />
        <om:Property Name="Name" Value="Sp.Transpak.Orchestrations" />
        <om:Property Name="Signal" Value="False" />
        <om:Element Type="PortType" OID="2039e831-4e91-4e6a-9acb-d3d83e18f427" ParentLink="Module_PortType" LowerBound="4.1" HigherBound="11.1">
            <om:Property Name="Synchronous" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_RcvTranspakInvoicesTPPW" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="33b541ce-4ffd-474a-a59d-54b4a16f7a31" ParentLink="PortType_OperationDeclaration" LowerBound="6.1" HigherBound="10.1">
                <om:Property Name="OperationType" Value="OneWay" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="60244fae-c1c6-4b4a-ac95-fb871b1d8862" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="8.13" HigherBound="8.112">
                    <om:Property Name="Ref" Value="Sp.Transpak.Schemas.uspPollInvoicesTPPW_TypedPolling_InterfaceTranspakPollInvoicesTPPW.TypedPolling" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="ServiceDeclaration" OID="e94f33a6-dad4-4a67-bb75-94de05ec9e4d" ParentLink="Module_ServiceDeclaration" LowerBound="11.1" HigherBound="216.1">
            <om:Property Name="InitializedTransactionType" Value="False" />
            <om:Property Name="IsInvokable" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="Process_LHDNAPI_TPPW" />
            <om:Property Name="Signal" Value="True" />
            <om:Element Type="VariableDeclaration" OID="7ca9cdd9-7cd2-499d-9a75-31703ccf4025" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="23.1" HigherBound="24.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAPIStatus" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="115846d1-3624-4c9e-afd1-73ca25195093" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="24.1" HigherBound="25.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAPIDate" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="db884f98-d0f7-49a2-99d0-77fce9b11ebb" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="25.1" HigherBound="26.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAPIErrorMessage" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="63699763-352c-4b5f-b51c-6aee5c45af91" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="26.1" HigherBound="27.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAPIRespStatus" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="3f0631b0-f249-4c58-bcdc-26e98a8858a1" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="27.1" HigherBound="28.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAPIResp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="357e97e2-8c22-434e-bdba-535395c01534" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="28.1" HigherBound="29.1">
                <om:Property Name="UseDefaultConstructor" Value="True" />
                <om:Property Name="Type" Value="System.Xml.XmlDocument" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varTempXML" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="82b17a48-a6bf-4329-9035-832875ab5907" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="29.1" HigherBound="30.1">
                <om:Property Name="UseDefaultConstructor" Value="True" />
                <om:Property Name="Type" Value="Sp.Transpak.CallAPI.PostPeppolXMLData" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varobjPeppolAPI" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="0db194aa-c1b1-48d6-a8d1-61407401ed5d" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="30.1" HigherBound="31.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varLoopItem" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="22c29331-769f-49e4-8cba-6174a4606c48" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="31.1" HigherBound="32.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varLoopCounter" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="2bef0860-dd69-43fa-ae2c-d7337162021d" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="32.1" HigherBound="33.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varFullXMLPath" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="7e5ab9b7-dd55-4b81-8e93-e24e78c6e97d" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="33.1" HigherBound="34.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varDocId" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="158e9baa-34f0-4950-8d26-9dc297598ce7" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="34.1" HigherBound="35.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varDocCount" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="676fbba4-9e8c-4767-934d-92c3b533c47b" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="18.1" HigherBound="19.1">
                <om:Property Name="Type" Value="Sp.Transpak.Schemas.PeppolAPIResponse" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgPeppolAPIResp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="333e52a5-3887-47d0-bb7d-87b2c5487225" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="19.1" HigherBound="20.1">
                <om:Property Name="Type" Value="Sp.Transpak.Schemas.uspPollInvoicesTPPW_TypedPolling_InterfaceTranspakPollInvoicesTPPW.TypedPolling" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgPollInvoices" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="234c6cbb-a8e6-4129-bac6-b6d3ecc065e8" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="20.1" HigherBound="21.1">
                <om:Property Name="Type" Value="Sp.Transpak.Schemas.uspPollInvoicesTPGG_TypedPolling_InterfaceTranspakPollInvoicesTPGG.TypedPollingResultSet0" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgSingleInvoice" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="198cd875-1afd-42db-b84d-455afc770597" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="21.1" HigherBound="22.1">
                <om:Property Name="Type" Value="Sp.Transpak.Schemas.TranspakInvoice.Invoice" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgLHDNInvoice" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="6fd386e8-34dd-4b4c-ab21-1547c0d840c6" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="22.1" HigherBound="23.1">
                <om:Property Name="Type" Value="Sp.Transpak.Schemas.uspInvoiceStatusupd_TypedProcedure_dbo.InterfaceTranspakInvStatusUpd" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgInvAPIStatusUpdReq" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="ServiceBody" OID="850d2843-950f-4642-a89e-eb4bc6372e86" ParentLink="ServiceDeclaration_ServiceBody">
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="Receive" OID="5ba5820a-0ef4-485d-b159-ffbeb5643449" ParentLink="ServiceBody_Statement" LowerBound="37.1" HigherBound="51.1">
                    <om:Property Name="Activate" Value="True" />
                    <om:Property Name="PortName" Value="Port_RcvTranspakInvoicesTPPW" />
                    <om:Property Name="MessageName" Value="msgPollInvoices" />
                    <om:Property Name="OperationName" Value="Operation_1" />
                    <om:Property Name="OperationMessageName" Value="Request" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Receive_1" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="VariableAssignment" OID="56fb5e77-a095-4349-9a21-416ed5a8187d" ParentLink="ServiceBody_Statement" LowerBound="51.1" HigherBound="55.1">
                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;Transpak LHDNAPI_TPPW Process Start&quot;,&quot;Transpak LHDNAPI_TPPW Process Started&quot;);&#xD;&#xA;varDocCount = xpath(msgPollInvoices,&quot;count(/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']/*[local-name()='DocumentID' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW'])&quot;);&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;Transpak TPPW Doc Count&quot;,varDocCount.ToString());&#xD;&#xA;" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Process_Start" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="While" OID="a51e8afb-0d3e-4e5b-835f-8b2f5b6e6576" ParentLink="ServiceBody_Statement" LowerBound="55.1" HigherBound="212.1">
                    <om:Property Name="Expression" Value="varLoopCounter &lt; varDocCount" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Loop_DocumentIds" />
                    <om:Property Name="Signal" Value="True" />
                    <om:Element Type="Scope" OID="1e373fc7-695b-4ed2-a14c-74fb37b37907" ParentLink="ComplexStatement_Statement" LowerBound="58.1" HigherBound="209.1">
                        <om:Property Name="InitializedTransactionType" Value="True" />
                        <om:Property Name="IsSynchronized" Value="False" />
                        <om:Property Name="ReportToAnalyst" Value="True" />
                        <om:Property Name="Name" Value="Scope_PeppolXml" />
                        <om:Property Name="Signal" Value="True" />
                        <om:Element Type="VariableAssignment" OID="98343394-f3aa-4838-9d33-a2c8de71001d" ParentLink="ComplexStatement_Statement" LowerBound="63.1" HigherBound="66.1">
                            <om:Property Name="Expression" Value="varLoopCounter = varLoopCounter + 1;&#xD;&#xA;varLoopItem = varLoopCounter.ToString();" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Incr_Counter" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Construct" OID="8a954478-d9c2-444e-80ac-ee6b9bca8823" ParentLink="ComplexStatement_Statement" LowerBound="66.1" HigherBound="75.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Const_SingleDocId" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="MessageRef" OID="17aa2f73-91ac-49a2-9c1a-1742164a29f1" ParentLink="Construct_MessageRef" LowerBound="67.35" HigherBound="67.51">
                                <om:Property Name="Ref" Value="msgSingleInvoice" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                            <om:Element Type="MessageAssignment" OID="dd305855-e2f7-4c59-bb74-3fa96feaf57f" ParentLink="ComplexStatement_Statement" LowerBound="69.1" HigherBound="74.1">
                                <om:Property Name="Expression" Value="msgSingleInvoice = xpath(msgPollInvoices, &quot;/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW'][&quot;+ varLoopItem +&quot;]&quot; );&#xD;&#xA;varDocId = msgSingleInvoice.DocumentID;&#xD;&#xA;varFullXMLPath = msgSingleInvoice.PeppolXMLPath;&#xD;&#xA;&#xD;&#xA;" />
                                <om:Property Name="ReportToAnalyst" Value="False" />
                                <om:Property Name="Name" Value="MsgAssign_InvoiceHeaderRequest" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="14bea831-fec3-4287-bff0-f4b026fb9f64" ParentLink="ComplexStatement_Statement" LowerBound="75.1" HigherBound="90.1">
                            <om:Property Name="Expression" Value="&#xA;if(System.Convert.ToString(Sp.Transpak.Common.SSOClientHelper.Read(&quot;Sp.Transpak&quot;, &quot;ShowTranspakAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msgSingleInvoice;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgSingleInvoice&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgSingleInvoice&quot;,varTempXML.OuterXml.Substring(1,29500));&#xA;    }&#xA;}" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="PrintLogs" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Construct" OID="d5ee8ba2-82a0-4291-bbd8-081d05aa3982" ParentLink="ComplexStatement_Statement" LowerBound="90.1" HigherBound="100.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="ConstMsg_PeppolXml" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="MessageAssignment" OID="22400227-493b-4396-bd09-7cbd0b547270" ParentLink="ComplexStatement_Statement" LowerBound="93.1" HigherBound="99.1">
                                <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.Load(varFullXMLPath);&#xD;&#xA;msgLHDNInvoice=varTempXML;&#xD;&#xA;&#xD;&#xA;msgLHDNInvoice(FILE.ReceivedFileName) = System.IO.Path.GetFileName(varFullXMLPath);" />
                                <om:Property Name="ReportToAnalyst" Value="False" />
                                <om:Property Name="Name" Value="MessageAssignment_5" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                            <om:Element Type="MessageRef" OID="2395b53f-99a6-4965-9581-5d507910747c" ParentLink="Construct_MessageRef" LowerBound="91.35" HigherBound="91.49">
                                <om:Property Name="Ref" Value="msgLHDNInvoice" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="ee7a4f19-0337-4d38-8c8c-a30a1a73dc08" ParentLink="ComplexStatement_Statement" LowerBound="100.1" HigherBound="117.1">
                            <om:Property Name="Expression" Value="varTempXML = msgLHDNInvoice;&#xD;&#xA;varAPIResp = varobjPeppolAPI.PostResponseData(varTempXML.OuterXml,&quot;&quot;,&quot;Invoice&quot;);&#xD;&#xA;&#xD;&#xA;//varAPIResp = varobjLHDNAPI.SubmitLHDNInvoice(&quot;SESAMiTEST&quot;,varTempXML.OuterXml);&#xD;&#xA;&#xA;if(System.Convert.ToString(Sp.Transpak.Common.SSOClientHelper.Read(&quot;Sp.Transpak&quot;, &quot;ShowTranspakAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    if(varAPIResp.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;APIResp&quot;,varAPIResp);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;APIResp&quot;,varAPIResp.Substring(1,29500));&#xA;    }&#xA;}" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Call_API_Peppol" />
                            <om:Property Name="Signal" Value="False" />
                        </om:Element>
                        <om:Element Type="Construct" OID="08da8cbc-1a21-493c-b4f8-4858021c87fd" ParentLink="ComplexStatement_Statement" LowerBound="117.1" HigherBound="127.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Const_PeppolAPIResp" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="MessageRef" OID="505ef668-55a9-4adf-bb2b-de2061e595ef" ParentLink="Construct_MessageRef" LowerBound="118.35" HigherBound="118.51">
                                <om:Property Name="Ref" Value="msgPeppolAPIResp" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                            <om:Element Type="MessageAssignment" OID="b54be5d0-de87-4c40-bdb4-125f4ca2d29e" ParentLink="ComplexStatement_Statement" LowerBound="120.1" HigherBound="126.1">
                                <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xA;varTempXML.LoadXml(varAPIResp);&#xA;msgPeppolAPIResp = varTempXML;&#xA;&#xA;varAPIRespStatus = xpath(msgPeppolAPIResp,&quot;string(/*[local-name()='PeppolAPIResponse']/*[local-name()='Succeed']/text())&quot;);" />
                                <om:Property Name="ReportToAnalyst" Value="False" />
                                <om:Property Name="Name" Value="MessageAssignment_1" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="a23f5b35-53de-4818-b6b3-e20986d7687f" ParentLink="ComplexStatement_Statement" LowerBound="127.1" HigherBound="173.1">
                            <om:Property Name="Expression" Value="varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;&#xD;&#xA;varAPIDate = msgPeppolAPIResp.Timestamp; &#xA;if(System.Convert.ToString(Sp.Transpak.Common.SSOClientHelper.Read(&quot;Sp.Transpak&quot;, &quot;ShowTranspakAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varAPIRespStatus&quot;,varAPIRespStatus);&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varAPIErrorMessage&quot;,varAPIErrorMessage);&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varAPIDate&quot;,varAPIDate);&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msgPeppolAPIResp;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolAPIResp&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolAPIResp&quot;,varTempXML.OuterXml.Substring(1,29500));&#xA;    }&#xA;}&#xD;&#xA;if(varAPIRespStatus == &quot;false&quot;)&#xD;&#xA;{&#xD;&#xA;    varAPIStatus = &quot;Failed&quot;;&#xD;&#xA;    //varAPIErrorMessage = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse']/*[local-name()='ErrorDescription']/text()&quot;);&#xD;&#xA;    //varAPIDate = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse']/*[local-name()='Timestamp'']/text()&quot;);&#xD;&#xA;&#xD;&#xA;    varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;&#xD;&#xA;    //varAPIDate = System.DateTime.Now.ToString(&quot;yyyy-MM-ddTHH:mm:ss&quot;);&#xD;&#xA;    varAPIDate = msgPeppolAPIResp.Timestamp; &#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;    varAPIStatus = &quot;Success&quot;;&#xD;&#xA;    //varAPIErrorMessage = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='InvoiceSubmissionID' and namespace-uri()='']/text()&quot;);&#xD;&#xA;    //varAPIDate = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='Timestamp' and namespace-uri()='']/text()&quot;);&#xD;&#xA;    varAPIErrorMessage = msgPeppolAPIResp.InvoiceSubmissionID;&#xD;&#xA;    varAPIDate = msgPeppolAPIResp.Timestamp;    &#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&amp;&quot;,&quot;&amp;amp;&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;'&quot;,&quot;''&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&lt;&quot;,&quot;&amp;lt;&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&gt;&quot;,&quot;&amp;gt;&quot;);&#xD;&#xA;if(varAPIErrorMessage.Length &gt; 555)&#xA;{&#xA;    varAPIErrorMessage = varAPIErrorMessage.Substring(0,554);&#xA;}&#xA;" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Assign_APIError" />
                            <om:Property Name="Signal" Value="False" />
                        </om:Element>
                        <om:Element Type="Construct" OID="be62eb8d-9601-420b-9677-3fae09e2c3a2" ParentLink="ComplexStatement_Statement" LowerBound="173.1" HigherBound="181.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Const_uspPOStatusUpdReq" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="MessageAssignment" OID="cd8d6864-3668-4ec7-8b35-4811a6a17694" ParentLink="ComplexStatement_Statement" LowerBound="176.1" HigherBound="180.1">
                                <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.LoadXml(&quot;&lt;ns0:InterfaceTranspakInvStatusUpd xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'&gt;&lt;ns0:DocumentID&gt;&quot; + varDocId + &quot;&lt;/ns0:DocumentID&gt;&lt;ns0:StatusType&gt;API&lt;/ns0:StatusType&gt;&lt;ns0:Status&gt;&quot; + varAPIStatus + &quot;&lt;/ns0:Status&gt;&lt;ns0:StatusMessage&gt;&quot; + varAPIErrorMessage + &quot;&lt;/ns0:StatusMessage&gt;&lt;ns0:StatusDateTime&gt;&quot; + varAPIDate + &quot;&lt;/ns0:StatusDateTime&gt;&lt;ns0:PeppolInvoiceXMLPath&gt;-&lt;/ns0:PeppolInvoiceXMLPath&gt;&lt;/ns0:InterfaceTranspakInvStatusUpd&gt;&quot;);&#xD;&#xA;msgInvAPIStatusUpdReq = varTempXML;&#xD;&#xA;" />
                                <om:Property Name="ReportToAnalyst" Value="False" />
                                <om:Property Name="Name" Value="MessageAssignment_4" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                            <om:Element Type="MessageRef" OID="25b64cc6-eb66-45e6-8d04-dc03c658360f" ParentLink="Construct_MessageRef" LowerBound="174.35" HigherBound="174.56">
                                <om:Property Name="Ref" Value="msgInvAPIStatusUpdReq" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="7b712dbd-cbf3-4213-9d61-3c3889433003" ParentLink="ComplexStatement_Statement" LowerBound="181.1" HigherBound="196.1">
                            <om:Property Name="Expression" Value="&#xA;if(System.Convert.ToString(Sp.Transpak.Common.SSOClientHelper.Read(&quot;Sp.Transpak&quot;, &quot;ShowTranspakAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msgInvAPIStatusUpdReq;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgInvAPIStatusUpdReq&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgInvAPIStatusUpdReq&quot;,varTempXML.OuterXml.Substring(1,29500));&#xA;    }&#xA;}" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="ShowLogs" />
                            <om:Property Name="Signal" Value="False" />
                        </om:Element>
                        <om:Element Type="Send" OID="7108bfe8-eadf-4a4f-b051-098aec9d55f5" ParentLink="ComplexStatement_Statement" LowerBound="196.1" HigherBound="198.1">
                            <om:Property Name="PortName" Value="Port_SndTranspakInvStatusUpdTPGG" />
                            <om:Property Name="MessageName" Value="msgInvAPIStatusUpdReq" />
                            <om:Property Name="OperationName" Value="Operation_1" />
                            <om:Property Name="OperationMessageName" Value="Request" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Send_1" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Catch" OID="ba2482e0-96e3-42ea-ac63-7d0efbbc1cdb" ParentLink="Scope_Catch" LowerBound="201.1" HigherBound="207.1">
                            <om:Property Name="ExceptionName" Value="ex" />
                            <om:Property Name="ExceptionType" Value="System.Exception" />
                            <om:Property Name="IsFaultMessage" Value="False" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="System Exception" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="VariableAssignment" OID="b788b149-dc4f-402a-8ff6-b368cde85540" ParentLink="Catch_Statement" LowerBound="204.1" HigherBound="206.1">
                                <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;Transpak_LHDNAPI_Exception&quot;,ex.Message);" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="ExceptionMsg" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                        </om:Element>
                    </om:Element>
                    <om:Element Type="Delay" OID="90179ef5-7436-44fe-bb21-bad2c00c6fc1" ParentLink="ComplexStatement_Statement" LowerBound="209.1" HigherBound="211.1">
                        <om:Property Name="Timeout" Value="new System.TimeSpan(0,0,0,0,System.Convert.ToInt32(Sp.Transpak.Common.SSOClientHelper.Read(&quot;Sp.Transpak&quot;, &quot;TranspakDelayinMS&quot;)));" />
                        <om:Property Name="ReportToAnalyst" Value="True" />
                        <om:Property Name="Name" Value="Delay_SSO" />
                        <om:Property Name="Signal" Value="True" />
                    </om:Element>
                </om:Element>
                <om:Element Type="VariableAssignment" OID="5fd152b0-4f1d-4bda-85e0-6d426b01ec62" ParentLink="ServiceBody_Statement" LowerBound="212.1" HigherBound="214.1">
                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;Transpak LHDNAPI_TPGG Process End&quot;,&quot;Transpak LHDNAPI_TPGG Process Completed&quot;);" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Process_End" />
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="793d89bd-6b20-4166-a8fb-f714bf0bde0d" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="14.1" HigherBound="16.1">
                <om:Property Name="PortModifier" Value="Implements" />
                <om:Property Name="Orientation" Value="Left" />
                <om:Property Name="PortIndex" Value="-1" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.Transpak.Orchestrations.PortType_RcvTranspakInvoicesTPPW" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_RcvTranspakInvoicesTPPW" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="LogicalBindingAttribute" OID="868e6033-fc99-4260-a742-2ec6b31c3152" ParentLink="PortDeclaration_CLRAttribute" LowerBound="14.1" HigherBound="15.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="67cfc574-3e7c-4f76-b38a-ab9bcfa62c57" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="16.1" HigherBound="18.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="70" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.Transpak.Orchestrations.PortType_SndTranspakInvStatusUpdTPGG" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndTranspakInvStatusUpdTPGG" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="LogicalBindingAttribute" OID="38091b84-cf5f-4054-9aeb-066a6e9538d3" ParentLink="PortDeclaration_CLRAttribute" LowerBound="16.1" HigherBound="17.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
#endif // __DESIGNER_DATA
[Microsoft.XLANGs.BaseTypes.BPELExportable(false)]
module Sp.Transpak.Orchestrations
{
    internal porttype PortType_RcvTranspakInvoicesTPPW
    {
        oneway Operation_1
        {
            Sp.Transpak.Schemas.uspPollInvoicesTPPW_TypedPolling_InterfaceTranspakPollInvoicesTPPW.TypedPolling
        };
    };
    [Microsoft.XLANGs.BaseTypes.BPELExportable(false)]
    internal service Process_LHDNAPI_TPPW
    {
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port implements PortType_RcvTranspakInvoicesTPPW Port_RcvTranspakInvoicesTPPW;
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port uses PortType_SndTranspakInvStatusUpdTPGG Port_SndTranspakInvStatusUpdTPGG;
        message Sp.Transpak.Schemas.PeppolAPIResponse msgPeppolAPIResp;
        message Sp.Transpak.Schemas.uspPollInvoicesTPPW_TypedPolling_InterfaceTranspakPollInvoicesTPPW.TypedPolling msgPollInvoices;
        message Sp.Transpak.Schemas.uspPollInvoicesTPGG_TypedPolling_InterfaceTranspakPollInvoicesTPGG.TypedPollingResultSet0 msgSingleInvoice;
        message Sp.Transpak.Schemas.TranspakInvoice.Invoice msgLHDNInvoice;
        message Sp.Transpak.Schemas.uspInvoiceStatusupd_TypedProcedure_dbo.InterfaceTranspakInvStatusUpd msgInvAPIStatusUpdReq;
        System.String varAPIStatus;
        System.String varAPIDate;
        System.String varAPIErrorMessage;
        System.String varAPIRespStatus;
        System.String varAPIResp;
        System.Xml.XmlDocument varTempXML;
        Sp.Transpak.CallAPI.PostPeppolXMLData varobjPeppolAPI;
        System.String varLoopItem;
        System.Int32 varLoopCounter;
        System.String varFullXMLPath;
        System.String varDocId;
        System.Int32 varDocCount;
        body ()
        {
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("5ba5820a-0ef4-485d-b159-ffbeb5643449")]
            activate receive (Port_RcvTranspakInvoicesTPPW.Operation_1, msgPollInvoices);
            varAPIStatus = "";
            varAPIDate = "";
            varAPIErrorMessage = "";
            varAPIRespStatus = "";
            varAPIResp = "";
            varTempXML = new System.Xml.XmlDocument();
            varobjPeppolAPI = new Sp.Transpak.CallAPI.PostPeppolXMLData();
            varLoopItem = "";
            varLoopCounter = 0;
            varFullXMLPath = "";
            varDocId = "";
            varDocCount = 0;
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("56fb5e77-a095-4349-9a21-416ed5a8187d")]
            System.Diagnostics.EventLog.WriteEntry("Transpak LHDNAPI_TPPW Process Start","Transpak LHDNAPI_TPPW Process Started");
            varDocCount = xpath(msgPollInvoices,"count(/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']/*[local-name()='DocumentID' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW'])");
            System.Diagnostics.EventLog.WriteEntry("Transpak TPPW Doc Count",varDocCount.ToString());
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("a51e8afb-0d3e-4e5b-835f-8b2f5b6e6576")]
            while (varLoopCounter < varDocCount)
            {
                [Microsoft.XLANGs.BaseTypes.DesignerPosition("1e373fc7-695b-4ed2-a14c-74fb37b37907")]
                scope
                {
                    body
                    {
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("98343394-f3aa-4838-9d33-a2c8de71001d")]
                        varLoopCounter = varLoopCounter + 1;
                        varLoopItem = varLoopCounter.ToString();
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("8a954478-d9c2-444e-80ac-ee6b9bca8823")]
                        construct msgSingleInvoice
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("dd305855-e2f7-4c59-bb74-3fa96feaf57f")]
                            msgSingleInvoice = xpath(msgPollInvoices, "/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceTranspakPollInvoicesTPPW']["+ varLoopItem +"]" );
                            varDocId = msgSingleInvoice.DocumentID;
                            varFullXMLPath = msgSingleInvoice.PeppolXMLPath;
                            
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("14bea831-fec3-4287-bff0-f4b026fb9f64")]
                        
                        if(System.Convert.ToString(Sp.Transpak.Common.SSOClientHelper.Read("Sp.Transpak", "ShowTranspakAdminLogs")) == "Yes")
                        {
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML = msgSingleInvoice;
                            if(varTempXML.OuterXml.Length < 30000)
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgSingleInvoice",varTempXML.OuterXml);
                            }
                            else
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgSingleInvoice",varTempXML.OuterXml.Substring(1,29500));
                            }
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("d5ee8ba2-82a0-4291-bbd8-081d05aa3982")]
                        construct msgLHDNInvoice
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("22400227-493b-4396-bd09-7cbd0b547270")]
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML.Load(varFullXMLPath);
                            msgLHDNInvoice=varTempXML;
                            
                            msgLHDNInvoice(FILE.ReceivedFileName) = System.IO.Path.GetFileName(varFullXMLPath);
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("ee7a4f19-0337-4d38-8c8c-a30a1a73dc08")]
                        varTempXML = msgLHDNInvoice;
                        varAPIResp = varobjPeppolAPI.PostResponseData(varTempXML.OuterXml,"","Invoice");
                        
                        //varAPIResp = varobjLHDNAPI.SubmitLHDNInvoice("SESAMiTEST",varTempXML.OuterXml);
                        
                        if(System.Convert.ToString(Sp.Transpak.Common.SSOClientHelper.Read("Sp.Transpak", "ShowTranspakAdminLogs")) == "Yes")
                        {
                            if(varAPIResp.Length < 30000)
                            {
                                System.Diagnostics.EventLog.WriteEntry("APIResp",varAPIResp);
                            }
                            else
                            {
                                System.Diagnostics.EventLog.WriteEntry("APIResp",varAPIResp.Substring(1,29500));
                            }
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("08da8cbc-1a21-493c-b4f8-4858021c87fd")]
                        construct msgPeppolAPIResp
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("b54be5d0-de87-4c40-bdb4-125f4ca2d29e")]
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML.LoadXml(varAPIResp);
                            msgPeppolAPIResp = varTempXML;
                            
                            varAPIRespStatus = xpath(msgPeppolAPIResp,"string(/*[local-name()='PeppolAPIResponse']/*[local-name()='Succeed']/text())");
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("a23f5b35-53de-4818-b6b3-e20986d7687f")]
                        varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;
                        varAPIDate = msgPeppolAPIResp.Timestamp; 
                        if(System.Convert.ToString(Sp.Transpak.Common.SSOClientHelper.Read("Sp.Transpak", "ShowTranspakAdminLogs")) == "Yes")
                        {
                            System.Diagnostics.EventLog.WriteEntry("varAPIRespStatus",varAPIRespStatus);
                            System.Diagnostics.EventLog.WriteEntry("varAPIErrorMessage",varAPIErrorMessage);
                            System.Diagnostics.EventLog.WriteEntry("varAPIDate",varAPIDate);
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML = msgPeppolAPIResp;
                            if(varTempXML.OuterXml.Length < 30000)
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgPeppolAPIResp",varTempXML.OuterXml);
                            }
                            else
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgPeppolAPIResp",varTempXML.OuterXml.Substring(1,29500));
                            }
                        }
                        if(varAPIRespStatus == "false")
                        {
                            varAPIStatus = "Failed";
                            //varAPIErrorMessage = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse']/*[local-name()='ErrorDescription']/text()");
                            //varAPIDate = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse']/*[local-name()='Timestamp'']/text()");
                        
                            varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;
                            //varAPIDate = System.DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
                            varAPIDate = msgPeppolAPIResp.Timestamp; 
                        }
                        else
                        {
                            varAPIStatus = "Success";
                            //varAPIErrorMessage = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='InvoiceSubmissionID' and namespace-uri()='']/text()");
                            //varAPIDate = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='Timestamp' and namespace-uri()='']/text()");
                            varAPIErrorMessage = msgPeppolAPIResp.InvoiceSubmissionID;
                            varAPIDate = msgPeppolAPIResp.Timestamp;    
                        }
                        
                        varAPIErrorMessage = varAPIErrorMessage.Replace("&","&amp;");
                        varAPIErrorMessage = varAPIErrorMessage.Replace("'","''");
                        varAPIErrorMessage = varAPIErrorMessage.Replace("<","&lt;");
                        varAPIErrorMessage = varAPIErrorMessage.Replace(">","&gt;");
                        if(varAPIErrorMessage.Length > 555)
                        {
                            varAPIErrorMessage = varAPIErrorMessage.Substring(0,554);
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("be62eb8d-9601-420b-9677-3fae09e2c3a2")]
                        construct msgInvAPIStatusUpdReq
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("cd8d6864-3668-4ec7-8b35-4811a6a17694")]
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML.LoadXml("<ns0:InterfaceTranspakInvStatusUpd xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'><ns0:DocumentID>" + varDocId + "</ns0:DocumentID><ns0:StatusType>API</ns0:StatusType><ns0:Status>" + varAPIStatus + "</ns0:Status><ns0:StatusMessage>" + varAPIErrorMessage + "</ns0:StatusMessage><ns0:StatusDateTime>" + varAPIDate + "</ns0:StatusDateTime><ns0:PeppolInvoiceXMLPath>-</ns0:PeppolInvoiceXMLPath></ns0:InterfaceTranspakInvStatusUpd>");
                            msgInvAPIStatusUpdReq = varTempXML;
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("7b712dbd-cbf3-4213-9d61-3c3889433003")]
                        
                        if(System.Convert.ToString(Sp.Transpak.Common.SSOClientHelper.Read("Sp.Transpak", "ShowTranspakAdminLogs")) == "Yes")
                        {
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML = msgInvAPIStatusUpdReq;
                            if(varTempXML.OuterXml.Length < 30000)
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgInvAPIStatusUpdReq",varTempXML.OuterXml);
                            }
                            else
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgInvAPIStatusUpdReq",varTempXML.OuterXml.Substring(1,29500));
                            }
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("7108bfe8-eadf-4a4f-b051-098aec9d55f5")]
                        send (Port_SndTranspakInvStatusUpdTPGG.Operation_1, msgInvAPIStatusUpdReq);
                    }
                    exceptions
                    {
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("ba2482e0-96e3-42ea-ac63-7d0efbbc1cdb")]
                        catch (System.Exception ex)
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("b788b149-dc4f-402a-8ff6-b368cde85540")]
                            System.Diagnostics.EventLog.WriteEntry("Transpak_LHDNAPI_Exception",ex.Message);
                        }
                    }
                }
                [Microsoft.XLANGs.BaseTypes.DesignerPosition("90179ef5-7436-44fe-bb21-bad2c00c6fc1")]
                delay new System.TimeSpan(0,0,0,0,System.Convert.ToInt32(Sp.Transpak.Common.SSOClientHelper.Read("Sp.Transpak", "TranspakDelayinMS")));
            }
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("5fd152b0-4f1d-4bda-85e0-6d426b01ec62")]
            System.Diagnostics.EventLog.WriteEntry("Transpak LHDNAPI_TPGG Process End","Transpak LHDNAPI_TPGG Process Completed");
        }
    }
}

